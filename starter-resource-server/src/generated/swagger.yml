
swagger: "2.0"
info:
    version: "0.0.1"
    title: "Swagger API"
host: localhost:4266
basePath: "/"
schemes:
    - http
    - https

securityDefinitions:
    bearerAuth:
        type: "apiKey"
        name: "Authorization"
        in: "header"
consumes:
    - application/json
produces:
    - application/json
        

definitions:
    User:
        type: object
        properties:
            username:
                type: string
            password:
                type: string
            roles:
                type: array
                items:
                    type: string
            json:
                type: object
    UserCreateBody:
        type: object
        properties:
            username:
                type: string
            password:
                type: string
            json:
                type: object
    UserChangesBody:
        type: object
        properties:
            username:
                type: string
            password:
                type: string
            json:
                type: object
    UserPushBody:
        type: object
    UserPullBody:
        type: object
    UserUpdateBody:
        type: object
        properties:
            id:
                type: string
            changes:
                $ref: '#/definitions/UserChangesBody'
            push:
                $ref: '#/definitions/UserPushBody'
            pull:
                $ref: '#/definitions/UserPullBody'
    Todo:
        type: object
        properties:
            title:
                type: string
            done:
                type: boolean
            owner:
                type: string
            json:
                type: object
    TodoCreateBody:
        type: object
        properties:
            title:
                type: string
            done:
                type: boolean
            json:
                type: object
    TodoChangesBody:
        type: object
        properties:
            title:
                type: string
            done:
                type: boolean
            json:
                type: object
    TodoPushBody:
        type: object
    TodoPullBody:
        type: object
    TodoUpdateBody:
        type: object
        properties:
            id:
                type: string
            changes:
                $ref: '#/definitions/TodoChangesBody'
            push:
                $ref: '#/definitions/TodoPushBody'
            pull:
                $ref: '#/definitions/TodoPullBody'
    AddIdBody:
        type: object
        properties:
            addId:
                type: string
    AddIdsBody:
        type: object
        properties:
            addIds:
                type: array
                items:
                    type: string
    RemoveIdBody:
        type: object
        properties:
            removeId:
                type: string
    RemoveIdsBody:
        type: object
        properties:
            removeIds:
                type: array
                items:
                    type: string


paths:
    /users:
        get:
            security:
              - bearerAuth: []
            tags: ['User']
            description: "sample description"
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/User'
        post:
            tags: ['User']
            description: "sample description"
            parameters:
                - name: body
                  description: "Not provided"
                  in: body
                  schema:
                    $ref: '#/definitions/UserCreateBody'
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/User'
    /users/{id}:
        get:
            security:
              - bearerAuth: []
            tags: ['User']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/User'
        put:
            security:
              - bearerAuth: []
            tags: ['User']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string

                - name: body
                  description: "Not provided"
                  in: body
                  schema:
                    $ref: '#/definitions/UserUpdateBody'
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/User'

    /todos:
        get:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Todo'
        post:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            parameters:
                - name: body
                  description: "Not provided"
                  in: body
                  schema:
                    $ref: '#/definitions/TodoCreateBody'
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/Todo'
    /todos/{id}:
        get:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/Todo'
        put:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string

                - name: body
                  description: "Not provided"
                  in: body
                  schema:
                    $ref: '#/definitions/TodoUpdateBody'
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/Todo'
        delete:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/Todo'
    /todos/{id}/owner:
        get:
            security:
              - bearerAuth: []
            tags: ['Todo']
            description: "sample description"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Not provided"
                  type: string
            responses:
                '200':
                    description: "not provided."
                    schema:
                schema:
                  $ref: '#/definitions/Todo'

